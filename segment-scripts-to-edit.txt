<!--  These are copied segment.com javascript examples that are used with Shopify. 
		If we can edit them to use CrateJoy meta and calls, we can add them to the main cratejoy-segment.txt
-->




<!--  Category Pages
		This tracks your product category pages (referred to as collections in Shopify)
		Would this be CrateJoy's listing.html page?
-->

<script type="text/javascript">
  analytics.track('Viewed Product Category', {
    category: "{{ collection.title }}",
    categoryUrl: "{{ collection.url }}",
    categoryProductCount: {{ collection.all_products_count }},
    {% if collection.current_type %} filteredType: "{{ collection.current_type }}"{% endif %},
    {% if collection.current_vendor %} filteredVendor: "{{ collection.current_vendor }}"{% endif %},
    defaultSortBy: "{{ collection.default_sort_by }}",
    referrerUrl: document.referrer,
    referrerPath: new URL(document.referrer).pathname,
    urlHref: window.location.href,
    urlPath: window.location.pathname,
    urlHash: window.location.hash
  });
</script>




<!--  Product Pages
		This script tracks when visitors view product and an Added Product event when they add the product to their cart.
		Would this be CrateJoy's Product.html page?
-->

<script type="text/javascript">
  analytics.track('Viewed Product', {
    id: "{{ product.id }}",
    name: "{{ product.title }}",
    type: "{{ product.type }}",
    url: "{{ product.url }}",
    price: {{ product.price }},
    priceMin: {{ product.price_min }},
    priceMax: {{ product.price_max }},
    priceVaries: {{ product.price_varies }},
    variantsCount: {{ product.variants.size }},
    firstAvailVariant: "{{ product.first_available_variant.title }}",
    variantId: {{ product.selected_variant.id }},
    variantAvailable: {{ variant.available }},
    variantCompareAtPrice: {{ variant.compare_at_price }},,
    variantQuantity: {{ variant.inventory_quantity }},
    variantPrice: {{ variant.price }},
    variantSelected: {{ variant.selected }},
    sku: "{{ variant.sku }}",
    variantTitle: "{{ variant.title }}",
    variantUrl: "{{ variant.url }}",
    variantWeight: "{{ variant.weight }}",
    vendor: "{{ product.vendor }}",
    collections: [{% for collection in product.collections %}"{{ collection.title }}",{% endfor %}],
    available: {{ product.available }},
    options: ["{{ product.options | join: '", "' }}"],
    optionsCount: {{ product.options.size }},
    tag: ["{{ product.tags | join: '", "' }}"]
  });

  // track Product Added event

  var form = document.getElementById('add-to-cart');
  // or your form's ID

  analytics.trackForm(form, 'Added Product', {
    id: {{ item.id }},
    name: "{{ item.title }}",
    price: {{ item.price }},
    quantity: {{ item.quantity }},
    value: {{ item.quantity }}*{{ item.price }}
  });
</script>




<!--  Cart Page
		This script tracks the cart page and events for Removed Product and Updated Product when a product 
		is removed from the cart or the quantity is updated.
		Would this be CrateJoy's checkout.html page?
-->

<script type="text/javascript">
  analytics.track('Viewed Cart', {
    itemCount: {{ cart.item_count }},
    totalPrice: {{ cart.total_price }},
    totalWeight: {{ cart.total_weight }}
  });

</script>




<!--  Thanks Page
	This tracks the Completed Order event that records all your transaction data to Segment.
	Would this be CrateJoy's thanks.html page?
-->

<script type="text/javascript">
  var discounts = {{ order.discounts | json }}
  var totalDiscount = 0;

  for (var i = 0; i< discounts.length; i++ ) {
    totalDiscount += discounts[i].savings;
  }

  window.analytics.track('Completed Order', {
    orderId: "{{ order_number }}",
    total: {{ total_price | money_without_currency }},
    revenue: {{subtotal_price | money_without_currency }},
    shipping: {{shipping_price | money_without_currency }},
    tax: {{tax_price | money_without_currency }},
    discount: totalDiscount,
    products: [
    {% for line_item in line_items %}
    {
      id: "{{ line_item.id }}",
      sku: "{{ line_item.sku }}",
      name: "{{ line_item.title }}",
      price: "{{ line_item.price }}",
      quantity: {{ line_item.quantity }}
    },
    {% endfor %} ]
    });
  </script>
	